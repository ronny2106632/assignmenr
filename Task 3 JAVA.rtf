{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang2057{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Times New Roman;}{\f2\fnil\fcharset0 Liberation Mono;}{\f3\fnil\fcharset1 Cambria Math;}{\f4\fnil\fcharset2 Symbol;}}
{\colortbl ;\red255\green255\blue255;\red0\green0\blue0;}
{\*\generator Riched20 10.0.19041}{\*\mmathPr\mmathFont3\mwrapIndent1440 }\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9                                                                     \b TASK THREE (part one)\par
1.Explain the differences between primitive and reference data types\b0 .\par
primitive variables store the actual values,whereas reference variables store the adresses of the objects they refer to\par
\b 2.Define the scope of a variable(hint:local and global variable)\par
\b0 The scope tells the compiler about the segment within a program where the variable is accessible or used\par
\b 3.Why is initialization of variables required.\par
\b0 It's so important to do this that Java either initializes a variable for you, or it indicates an error has occurred, telling you to initialize a variable.\par
\b 4.DIifferentiate between Static,instance and local variables.\par
\b0 Local Variable-\tab Remains in memory as long as the method executes\par
Instance Variable-Remains in memory as long as the object is in memory\par
Static Variable-Remains in memory as long as program executes\par

\pard\sb100\sa100\sl240\slmult1\tx720\b 5.\highlight1\f1\fs24 Differentiate between widening and narrowing casting in java. \par
\b0 Widening Casting (automatically) - converting a smaller type to a larger type size. byte -> short -> char -> int -> long -> float -> double. Narrowing Casting (manually) - converting a larger type to a smaller size type.\par
\highlight0\b\f0\fs22 6.\highlight1\f1 the following table shows data type, its size, default value and the range. Filling in the missing values.\par
\trowd\trgaph14\trrh1\trpaddl14\trpaddr14\trpaddfl3\trpaddfr3
\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx757\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx2541\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx3653\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx5919 
\pard\intbl\sb100\sa100\sl259\slmult0\highlight0 TYPE \f0\cell\f1 SIZE (IN BYTES) \f0\cell\f1 DEFAULT \f0\cell\f1 RANGE \f0\cell\row\trowd\trgaph14\trrh1\trpaddl14\trpaddr14\trpaddfl3\trpaddfr3
\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx757\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx2541\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx3653\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx5919 
\pard\intbl\sb100\sa100\sl259\slmult0\f1 boolean \f0\cell\f1 1 bit \f0\cell       0\cell\f1 true, false \f0\cell\row\trowd\trgaph14\trrh1\trpaddl14\trpaddr14\trpaddfl3\trpaddfr3
\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx757\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx2541\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx3653\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx5919 
\pard\intbl\sb100\sa100\sl259\slmult0\f1 Char \f0\cell\f1      \b0 16 bits\b\f0\cell\f1  \\u0000'\f0\cell\f1\lquote\\0000\rquote  to \lquote\\ffff\rquote  \f0\cell\row\trowd\trgaph14\trrh1\trpaddl14\trpaddr14\trpaddfl3\trpaddfr3
\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx757\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx2541\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx3653\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx5919 
\pard\intbl\sb100\sa100\sl259\slmult0\f1 Byte \f0\cell           8 bits\cell\f1        0 \f0\cell\f1 -2\up12 7 to +27-1 \up0\f0\cell\row\trowd\trgaph14\trrh1\trpaddl14\trpaddr14\trpaddfl3\trpaddfr3
\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx757\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx2541\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx3653\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx5919 
\pard\intbl\sb100\sa100\sl259\slmult0\f1 Short \f0\cell        16 bits\cell\f1         0 \f0\cell\f1 -2\up12 15 to +215-1 \up0\f0\cell\row\trowd\trgaph14\trrh1\trpaddl14\trpaddr14\trpaddfl3\trpaddfr3
\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx757\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx2541\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx3653\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx5919 
\pard\intbl\sb100\sa100\sl259\slmult0\f1 Int \f0\cell\f1       \b0 32 bits\b\f0\cell\f1         0\f0\cell\f1 -2\up12 31 to +231-1 \up0\f0\cell\row\trowd\trgaph14\trrh1\trpaddl14\trpaddr14\trpaddfl3\trpaddfr3
\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx757\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx2541\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx3653\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx5919 
\pard\intbl\sb100\sa100\sl259\slmult0\f1 Long \f0\cell        \b0 64 bits\b\cell\f1 0L \f0\cell\f1 -9,223,372,036,854,775,808\f0\cell\row\trowd\trgaph14\trrh1\trpaddl14\trpaddr14\trpaddfl3\trpaddfr3
\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx757\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx2541\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx3653\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx5919 
\pard\intbl\sb100\sa100\sl259\slmult0\f1 Float \f0\cell\f1        32 bits\f0\cell\f1 00.0f \f0\cell\f1  upto 7 decimal digits\f0\cell\row\trowd\trgaph14\trrh1\trpaddl14\trpaddr14\trpaddfl3\trpaddfr3
\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx757\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx2541\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx3653\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx5919 
\pard\intbl\sb100\sa100\sl259\slmult0\f1 Double \f0\cell\f1              8 \f0\cell       0.0\cell\f1 -1.8E+308 to +1.8E+308 \f0\cell\row\trowd\trgaph14\trrh1\trpaddl14\trpaddr14\trpaddfl3\trpaddfr3
\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx757\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx2541\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx3653\clvertalc\clcfpat2\clcbpat1\clbrdrl\brdrw48\brdrs\brdrcf2\clbrdrt\brdrw48\brdrs\brdrcf2\clbrdrr\brdrw48\brdrs\brdrcf2\clbrdrb\brdrw48\brdrs\brdrcf2 \cellx5919 
\pard\intbl\sb100\sa100\sl259\slmult0\f1\cell\cell\f0\cell\f1\cell\row 
\pard\sl240\slmult1\tx720\f0\par
\par
7.\f1 Explain the importance of using Java packages.\par
\b0 We use packages to avoid name conflicts, and to write a better maintainable code.\par
\par
\b 8.Explain three controls used when creating GUI applications in Java language\par
\par

\pard\sa200\sl276\slmult1\b0\f0 Three steps are necessary to create and place a GUI component: Declare the component with an identifier (name); Construct the component by invoking an appropriate constructor via the new operator; Identify the container (such as Frame or Panel ) designed to hold this component.\par

\pard\sl240\slmult1\tx720\b 9.\f1 Explain the difference between containers and components as used in Java.\par
\b0\f0\par

\pard\sa200\sl276\slmult1 The class Component is the abstract base class for the non-menu user-interface controls of AWT. A component represents an object with graphical representation. The class Container is the superclass for the containers of AWT. The container object can contain other AWT components\par

\pard\sl240\slmult1\tx720\b 10.\f1 Write a Java program to reverse an array having five items of type int.\par
\b0 class Array \{ \par
      \par
    // Function to reverse arr[] \par
    // from start to end \par
    public static void reverse(int arr[],  \par
                              int start, \par
                              int end) \par
    \{ \par
        int temp; \par
          \par
        while (start < end) \par
        \{ \par
            temp = arr[start];  \par
            arr[start] = arr[end]; \par
            arr[end] = temp; \par
            start++; \par
            end--; \par
        \} \par
    \}      \par
      \par
    // Function to left rotate arr[] \par
    // of size n by d \par
    public static void leftRotate(int arr[], int d) \par
    \{ \par
        if (d == 0) \par
            return; \par
        int n = arr.length; \par
        reverse(arr, 0, d - 1); \par
        reverse(arr, d, n - 1); \par
        reverse(arr, 0, n - 1); \par
    \} \par
      \par
    /* utility function to print an array */\par
    public static void printArray(\par

\pard\sa200\sl276\slmult1\qj\b\f0\par

\pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent360{\pntxtb\'B7}}\fi-360\li720\sl240\slmult1\tx720 11.\f1 Programs written for a graphical user interface have to deal with \ldblquote events.\rdblquote  \par

\pard\fi709\li709\sa160\sl259\slmult0 Explain what is meant by the term event.\par

\pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-360\li2138\sa160\sl259\slmult0\b0  An event is anything that can occur asynchronously, not under the control of the program, to which the program might want to respond.\par

\pard\fi709\li709\sa160\sl259\slmult0\b Give at least two different examples of events, and discuss how a program might\par

\pard\sa200\sl276\slmult1\qj respond to those events\par
\b0 GUI programs are said to be "event-driven" because for the most part, such programs simply wait for events and respond to them when they occur. In many (but not all) cases, an event is the result of a user action, such as when the user clicks the mouse button, types a character, or clicks a button. The program might respond to a mouse-click on a canvas by drawing a shape, to a typed character by adding the character to an input box, or to a click on a button by clearing a drawing. More generally, a programmer can set up any desired response to an event by writing an event-handling routine for that event.\par

\pard\sl240\slmult1\tx720\b 12.Explain the difference between the following terms as used in Java programming. \par

\pard\fi709\li709\sa160\sl259\slmult0 Polymorphism and encapsulation\par
\b0 Polymorphism allows program code to have different meaning or functions while encapsulation is the process of keeping classes private so they cannot be modified by external codes.\b\par
method overloading and method overriding\par
\b0 When the method signature (name and parameters) are the same in the superclass and the child class, it's called overriding. When two or more methods in the same class have the same name but different parameters, it's called overloading.\par
\b class and interface\par
\b0 Writing an interface is similar to writing a class. But a class describes the attributes and behaviors of an object. And an interface contains behaviors that a class implements. Following are the important differences between Class and an Interface.\par
\b inheritance and polymorphism\par
\b0 inheritance supports the concept of reusability and reduces code length in object-oriented programming. Polymorphism allows the object to decide which form of the function to implement at compile-time (overloading) as well as run-time (overriding).\par

\pard\fi709\li709\sa160\sl259\slmult0\qj\par
\b 13.using examples, explain the two possible ways of implementing polymorphism. Show your code in java\par
\b0 Method overloading- is the process that can create multiple methods of the same name in the same class, and all the methods work in different ways. Method overloading occurs when there is more than one method of the same name in the class.\par
\par
Example of Method Overloading in Java\par
class Shapes \{\par
  public void area() \{\par
    System.out.println("Find area ");\par
  \}\par
public void area(int r) \{\par
    System.out.println("Circle area = "+3.14*r*r);\par
  \}\par
\par
public void area(double b, double h) \{\par
    System.out.println("Triangle area="+0.5*b*h);\par
  \}\par
public void area(int l, int b) \{\par
    System.out.println("Rectangle area="+l*b);\par
  \}\par
\par
\par
\}\par
\par
class Main \{\par
  public static void main(String[] args) \{\par
    Shapes myShape = new Shapes();  // Create a Shapes object\par
    \par
    myShape.area();\par
    myShape.area(5);\par
    myShape.area(6.0,1.2);\par
    myShape.area(6,2);\par
    \par
  \}\par
\}\par

\pard\sa200\sl276\slmult1\qj Method overriding is the process when the subclass or a child class has the same method as declared in the parent class.\par
\par
Example of Method Overriding in Java\par
class Vehicle\{  \par
  //defining a method  \par
  void run()\{System.out.println("Vehicle is moving");\}  \par
\}  \par
//Creating a child class  \par
class Car2 extends Vehicle\{  \par
  //defining the same method as in the parent class  \par
  void run()\{System.out.println("car is running safely");\}  \par
  \par
  public static void main(String args[])\{  \par
  Car2 obj = new Car2();//creating object  \par
  obj.run();//calling method  \par
  \}  \par
\}  \par
                                                    \b TASK THREE (part two)\par

\pard\sa160\sl259\slmult0\f0\fs28 1. With relevant examples, explain the following concepts as used in Java programming.\par
a. Mutable classes. \par
\tab Explain what is meant by mutable class\par

\pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa160\sl259\slmult0\b0 A mutable class is one that can change its internal state after it is created. Generally speaking, a class is mutable unless special effort is made to make it immutable.\par

\pard\sa160\sl259\slmult0\b\tab Write a program that implements the concept of mutable class\par
\b0 class MutableClass \{\par
  var name: String\par
  var age: Int\par
 \par
  init(name: String, age: Int) \{\par
    self.name = name\par
    self.age = age\par
  \}\par
\}\b\par
\b0 let mutable = MutableClass(name: "John", age: 30)\par
mutable.name = "Mike"\par
mutable.age = 31\par
\b b. Immutable classes. \par
\tab Explain what is meant by immutable class\par
\b0 immutable classes define objects which, once created, never change their value. A variable of an immutable type may only be changed by re-assigning to that variable. \par
\b\tab Write a program that implements the concept of immutable class\par
\}\b0 public class ImmutableClass \{\par
\par
private int data;\par
\par
public ImmutableClass(int data) \{\par
\par
this.data = data;\par
\par
\}\par
\par
public int getData() \{\par
\par
return data;\par
\par
\}\par
\par
\b\par
c. Explain the situations where mutable classes are more preferable than immutable classes when writing a Java program.\par
\b0 Mutable objects can be modified (or mutated) after they\rquote re created, and transform into other data or variables. For example:\par
\par
// lowercase user data stored in an object by mutating the values\par
const user1 = \{ firstname: \lquote John\rquote , lastname: \lquote DOE\rquote  \};\par
\par
console.log(user1); // logs \{ firstname: \lquote John\rquote , lastname: \lquote DOE\rquote  \}\par
\par
const lowerCaseUserData = function(user) \{\par
  user.firstname = user.firstname.toLowerCase();\par
  user.lastname = user.lastname.toLowerCase();\par
\}\par
\par
lowerCaseUserData(user1);\par
\par
console.log(user1); // logs \{ firstname: \lquote john\rquote , lastname: \lquote doe\rquote  \} - has changed\par
\b 2. Explain what a String buffer class is as used in Java\par
\b0 A string buffer is like a String , but can be modified. At any point in time it contains some particular sequence of characters, but the length and content of the sequence can be changed through certain method calls.\par
\b\tab the syntax of creating an object of StringBuffer class \par
\b0 StringBuffer sb = new StringBuffer("Hello");\par
\b Explain the methods in the StringBuffer class \par
\b0 It is used to append the specified string with this string. The append() method is overloaded like append(char), append(boolean), append(int), append(float), append(double) etc. It is used to insert the specified string with this string at the specified position.\par
\b\par
b. Write the output of the following program.\par

\pard\sl240\slmult1\f2     class Myoutput \par

\pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent360{\pntxtb\'B7}}\fi-283\li707\sa283\sl240\slmult1\tx707     \{\par
{\pntext\f4\'B7\tab}        public static void main(String args[])\par
{\pntext\f4\'B7\tab}        \{\par
{\pntext\f4\'B7\tab}            String ast = "hello i love java";\par
{\pntext\f4\'B7\tab}            System.out.println(ast.indexOf('e')+" "+ast.indexOf('ast')+" "+ast.lastIndexOf('l')+" "+ast .lastIndexOf('v'));\par
{\pntext\f4\'B7\tab}        \}\par
{\pntext\f4\'B7\tab}    \}\par

\pard\sa160\sl259\slmult0\f0 c. Explain your answer in (2b) above.\par
\par
d. With explanation, write the output of the following program.\par

\pard\sl240\slmult1\f2    \par
 class Myoutput \par

\pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent360{\pntxtb\'B7}}\fi-283\li707\sa283\sl240\slmult1\tx707     \{\par
{\pntext\f4\'B7\tab}        public static void main(String args[])\par
{\pntext\f4\'B7\tab}        \{ \par
{\pntext\f4\'B7\tab}             StringBuffer bfobj = new StringBuffer("Jambo");\par
{\pntext\f4\'B7\tab}             StringBuffer bfobj1 = new StringBuffer(" Kenya");\par
{\pntext\f4\'B7\tab}             c.append(bfobj1);\par
{\pntext\f4\'B7\tab}             System.out.println(bfobj);\par
{\pntext\f4\'B7\tab}        \}\par
{\pntext\f4\'B7\tab}    \}\par

\pard\sa283\sl240\slmult1\b0 A.  Jambo Kenyas\par
B.  Kenya Jambo\par
C.  Runtime Error\par
D.  Compilation Error\par

\pard\sa160\sl259\slmult0\b\f0 e. With explanation, write the output of the following program.\par

\pard\sl240\slmult1\f2    \par

\pard\sa283\sl240\slmult1  class Myoutput\par

\pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent360{\pntxtb\'B7}}\fi-283\li707\sa283\sl240\slmult1\tx707     \{\par
{\pntext\f4\'B7\tab}        public static void main(String args[])\par
{\pntext\f4\'B7\tab}        \{ \par
{\pntext\f4\'B7\tab}           StringBuffer str1 = new StringBuffer("Jambo");\par
{\pntext\f4\'B7\tab}           StringBuffer str2 = str1.reverse();\par
{\pntext\f4\'B7\tab}           System.out.println(str2);\par
{\pntext\f4\'B7\tab}        \}\par
{\pntext\f4\'B7\tab}    \}\par

\pard\sa283\sl240\slmult1\b0 Explanation:\par
\f3\u10625?\f0\tab The code will print Jambo Kenya.\par
\f3\u10625?\f0\tab The append() method is used to append one string to the end of another.\par
\f3\u10625?\f0\tab The method returns a reference to this object.\par
\f3\u10625?\f0\tab bfobj is now a reference to the object "Jambo Kenya".\par
\par
\f3\u10625?\f0\tab 17.What is the output of the following code?\par
\f3\u10625?\f0\tab class Myoutput \par
\f3\u10625?\f0\tab     \{\par
\f3\u10625?\f0\tab         public static void main(String args[])\par
\f3\u10625?\f0\tab         \{\par
\f3\u10625?\f0\tab              StringBuffer bfobj = new StringBuffer("Jambo");\par
\f3\u10625?\f0\tab              bfobj.append(" Kenya");\par
\f3\u10625?\f0\tab              bfobj.insert(2, "MIT");\par
\f3\u10625?\f0\tab              System.out.println(bfobj);\par
\f3\u10625?\f0\tab         \}\par
\f3\u10625?\f0\tab     \}\par
Explanation:\par
\f3\u10625?\f0\tab The code will print JamMITbo Kenya.\par
\f3\u10625?\f0\tab The insert() method inserts the string str into the receiver string buffer at the index index.\f2\lang9\par

\pard\sa160\sl259\slmult0\b\f0 f. With explanation, write the output of the following program.\par

\pard\sl240\slmult1\f2    \par

\pard\sa283\sl240\slmult1  class Myoutput \fs20\par

\pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent360{\pntxtb\'B7}}\fi-283\li707\sa283\sl240\slmult1\tx707\fs28     \{\par
{\pntext\f4\'B7\tab}       class output \par
{\pntext\f4\'B7\tab}       \{\par
{\pntext\f4\'B7\tab}         public static void main(String args[])\par
{\pntext\f4\'B7\tab}         \{\par
{\pntext\f4\'B7\tab}            char c[]=\{'A', '1', 'b' ,' ' ,'a' , '0'\};\par
{\pntext\f4\'B7\tab}            for (int i = 0; i < 5; ++i)\par
{\pntext\f4\'B7\tab}            \{\par
{\pntext\f4\'B7\tab}                   i++; \par
{\pntext\f4\'B7\tab}                   if(Character.isDigit(c[i]))\par
{\pntext\f4\'B7\tab}                       System.out.println(c[i]+" is a digit");\par
{\pntext\f4\'B7\tab}                   if(Character.isWhitespace(c[i]))\par
{\pntext\f4\'B7\tab}                       System.out.println(c[i]+" is a Whitespace character");\par
{\pntext\f4\'B7\tab}                   if(Character.isUpperCase(c[i]))\par
{\pntext\f4\'B7\tab}                       System.out.println(c[i]+" is an Upper case A.  Jambo Kenya\par
{\pntext\f4\'B7\tab}B.  Kenya Jambo\par
{\pntext\f4\'B7\tab}C.  Runtime Error\par
{\pntext\f4\'B7\tab}D.  Compilation Error\par
{\pntext\f4\'B7\tab}                   if(Character.isLowerCase(c[i]))\par
{\pntext\f4\'B7\tab}                       System.out.println(c[i]+" is a lower case Letter");\par
{\pntext\f4\'B7\tab}                   i++;\par
{\pntext\f4\'B7\tab}            \}\par
{\pntext\f4\'B7\tab}        \}\par
{\pntext\f4\'B7\tab}    \}\par

\pard\sa160\sl259\slmult0\b0\f0 1 is a digit\par
 is a Whitespace character\par
A is an Upper case Letter\par
a is a lower case Letter\par
0 is a digits\par

\pard\sa200\sl276\slmult1\qj\fs22\par

\pard\sa200\sl276\slmult1\par
}
 